name: CI Pipeline

on:
  push:
    branches:
      - master

env:
  DOCKER_IMAGE: deepak8934/petapp:${{ github.sha }}
  MAVEN_OPTS: "-DskipTests=true"
  SONAR_HOST_URL: "https://sonarcloud.io"  # Change this to your SonarQube server URL if different
  SONAR_PROJECT_KEY: "your_project_key"     # Replace with your actual Sonar project key
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}    # Ensure you have this token in your GitHub secrets
  GIT_DEPTH: 0
  DOCKER_DRIVER: overlay2

jobs:
  build_and_test:
    runs-on: java_build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Output Image
        id: set-output
        run: echo "::set-output name=image::deepak8934/petapp:${{ github.sha }}"

      - name: Cache Maven Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
            java-version: '17'
            distribution: 'adopt'

      - name: Build with Maven
        run: mvn clean install
        working-directory: ${{ github.workspace }}

      - name: SonarCloud Scan
        #run: mvn sonar:sonar -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }} -Dsonar.host.url=${{ env.SONAR_HOST_URL }} -Dsonar.login=${{ secret.DevSecops_Pipeline_Token }}
        run: mvn sonar:sonar -Dsonar.projectKey=ankit20000_DevSecops_Pipeline -Dsonar.organization=ankit20000 -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=3efd906389f89ff2f42493c5bda21481a0a75a68

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: jar
          path: target/*.jar

      - name: Run Unit Tests
        run: mvn test

      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: target/test-classes/TEST-*.xml

      # - name: Install Snyk
      #   run: npm install -g snyk

      # - name: Run Snyk to check for vulnerabilities
      #   uses: snyk/actions/node@master
        #env:
      #       SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      # # - name: Authenticate Snyk
      # #   run: snyk auth --token=${{ secrets.SNYK_TOKEN }}

      # - name: Snyk Maven Dependency Scan
      #   run: snyk test

      # - name: Snyk Docker Image Scan
      #   run: snyk container test ${{ env.DOCKER_IMAGE }}

      - name: Build Docker Image
        run: |
          docker build --cache-from ${{ env.DOCKER_IMAGE }} -t ${{ env.DOCKER_IMAGE }} .
          docker save ${{ env.DOCKER_IMAGE }} > docker_image.tar

      - name: Upload Docker Image Artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-image
          path: docker_image.tar

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker Image
        run: docker push ${{ env.DOCKER_IMAGE }}
